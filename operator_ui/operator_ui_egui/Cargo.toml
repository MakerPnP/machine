[package]
name = "operator_ui_egui"
version = "0.1.0"
authors = ["Dominic Clifton <me@dominicclifton.name>"]
edition = "2024"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.90"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[features]
profile-with-puffin = [
    "profiling/profile-with-puffin",
    "dep:puffin_http",
]

[dependencies]
operator_shared = { workspace = true }
i18n = { git = "https://github.com/MakerPnP/makerpnp.git" }

# gui (egui)
egui = "0.33.0"
eframe = { version = "0.33.0", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
    "x11",           # To support older Linux distributions (restores one of the default features)
] }

# tracing
tracing-subscriber = { workspace = true, features = ["env-filter"] }
tracing = { workspace = true }

# logging
log = "0.4.27"

# profiling
profiling = { workspace = true}
puffin_http = { workspace = true, optional = true}

egui-i18n = { workspace = true }
egui_mobius = { workspace = true, features = ["serde"] }

# tasks/async
tokio = { workspace = true, features = ["full"]}
futures =  { workspace = true }
async-std =  { workspace = true }

# messaging/comms
ergot           = { workspace = true }

# serialization
serde = { version = "1.0.219", features = ["derive"] }

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11.8"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4.50"
web-sys = "0.3.70"              # to access the DOM (to hide the loading text)

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "main" }
# eframe = { git = "https://github.com/emilk/egui", branch = "main" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }


# ----------------------------------------------------------------------------------------
# Lints:

[lints]
workspace = true

